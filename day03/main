#!/usr/bin/env ruby

lines = $<.read.lines.take(2).map{ |line| line.chomp.split(",") }

a, b = lines.map do |directions|
  pos, x, y, out = 0, 0, 0, {}
  directions.each do |dir|
    steps = dir[1..].to_i
    case dir[0]
    when "R"
      steps.times.each { |i| out[[x + i, y]] ||= pos + i + 1 }
      x += steps
    when "L"
      steps.times.each { |i| out[[x - i, y]] ||= pos + i + 1 }
      x -= steps
    when "U"
      steps.times.each { |i| out[[x, y + i]] ||= pos + i + 1 }
      y += steps
    when "D"
      steps.times.each { |i| out[[x, y - i]] ||= pos + i + 1 }
      y -= steps
    end
    pos += steps
  end
  out.delete([0,0])
  out
end

intersections = (a.keys & b.keys)
puts "Part 1"
puts intersections.map { |point| point[0].abs + point[1].abs }.min
puts "Part 2"
puts intersections.map { |i| a[i] + b[i] }.min
