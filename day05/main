#!/usr/bin/env ruby

input = $<.read.split(",").map(&:to_i)

def intcode_computer(program, input)
  program = program.clone
  output = []
  idx = 0
  while program[idx] != 99 # Halt
    a, b, c = program[idx + 1, 3]
    a = program[a] if program[idx].div(100).modulo(10).zero?
    b = program[b] if program[idx].div(1000).modulo(10).zero?
    case program[idx] % 100
    when 1 # Add
      program[c] = a + b
      idx += 4
    when 2 # Multiply
      program[c] = a * b
      idx += 4
    when 3 # Read
      program[program[idx + 1]] = input
      idx += 2
    when 4 # Write
      output << program[program[idx + 1]]
      idx += 2
    when 5 # Jump if true
      idx = a != 0 ? b : idx + 3
    when 6 # Jump if false
      idx = a.zero? ? b : idx + 3
    when 7 # Less than
      program[c] = a < b ? 1 : 0
      idx += 4
    when 8 # Equals
      program[c] = a == b ? 1 : 0
      idx += 4
    when 99 # Halt
      return output
    else
      puts "Program failed"
      return nil
    end
  end
  return output
end

puts "Part 1"
puts intcode_computer(input, 1)&.last

puts "Part 2"
puts intcode_computer(input, 5)&.last
